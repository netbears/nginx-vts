daemon off;
worker_processes  auto;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    vhost_traffic_status_zone shared:vhost_traffic_status:16m;

    log_format json escape=json '{'
                    '"user_agent": "$http_user_agent", '
                    '"body_bytes_sent": "$body_bytes_sent", '
                    '"bytes_sent": "$bytes_sent", '
                    '"clientip": "$remote_addr", '
                    '"http_host": "$http_host", '
                    '"log_timestamp": "$time_local", '
                    '"proxy_host": "$proxy_host", '
                    '"referrer": "$http_referer", '
                    '"request": "$request", '
                    '"request_time": $request_time, '
                    '"status": $status, '
                    '"type": "ingress.nginx.access-log", '
                    '"upstream_addr": "$upstream_addr", '
                    '"upstream_response_time": "$upstream_response_time", '
                    '"upstream_status": "$upstream_status", '
                    '"x_forwarded_for": "$http_x_forwarded_for", '
                    '"x_forwarded_port": "$http_x_forwarded_port", '
                    '"x_forwarded_proto": "$http_x_forwarded_proto"'
                  '}';
    access_log /var/log/nginx/access.log json;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_vary on;
    gzip_types application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml;
    gzip_min_length 1000;
    gzip_disable "MSIE [1-6].(?!.*SV1)";

    variables_hash_max_size 1024;
    variables_hash_bucket_size 64;
    server_names_hash_bucket_size 128;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 100m;

    proxy_read_timeout 60;
    proxy_buffers 256 32k;
    proxy_busy_buffers_size 64k;

    include  "/etc/nginx/conf.d/*.conf";

    server {
        # port to listen on. Can also be set to an IP:PORT
        listen  env_port;

        location env_healthcheck_location {
            return 200 'pong';
            allow 127.0.0.1;
            allow env_pod_cidr;
            deny all;
        }

        location env_metrics_location {
            vhost_traffic_status_display;
        	vhost_traffic_status_display_format html;
            allow 127.0.0.1;
            allow env_pod_cidr;
            deny all;
        }
    }
}
